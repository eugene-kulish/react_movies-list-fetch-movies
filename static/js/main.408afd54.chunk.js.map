{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","setMovies","useState","query","setQuery","newMovie","setNewMovie","isLoading","setIsLoading","isError","setIsError","handleOnClick","useCallback","event","preventDefault","fetch","then","res","json","catch","Response","Error","getMovie","movieFromServer","Object","hasOwn","Title","Plot","Poster","imdbID","finally","addMovie","addedMovie","some","htmlFor","type","id","placeholder","cn","value","onChange","target","disabled","length","onClick","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.408afd54.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    (movie) && (\n      <div className=\"card\" data-cy=\"movieCard\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              data-cy=\"moviePoster\"\n              src={movie.imgUrl}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"images/imdb-logo.jpeg\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n\n            <div className=\"media-content\">\n              <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\" data-cy=\"movieDescription\">\n            {movie.description}\n\n            <br />\n\n            <a href={movie.imdbUrl} data-cy=\"movieURL\">\n              IMDB\n            </a>\n          </div>\n        </div>\n      </div>\n    )\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useCallback, useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>;\n};\n\nexport const FindMovie: React.FC<Props> = ({\n  movies,\n  setMovies,\n}) => {\n  const [query, setQuery] = useState('');\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n  const [isError, setIsError] = useState(false);\n\n  const handleOnClick = useCallback((event: React.FormEvent) => {\n    event.preventDefault();\n    setIsLoading(true);\n\n    getMovie(query)\n      .then((movieFromServer) => {\n        if (!Object.hasOwn(movieFromServer, 'Error')) {\n          setNewMovie({\n            title: movieFromServer.Title,\n            description: movieFromServer.Plot,\n            imgUrl: (movieFromServer.Poster === 'N/A')\n              ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n              : movieFromServer.Poster,\n            imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbID}`,\n            imdbId: movieFromServer.imdbID,\n          });\n        } else {\n          setNewMovie(null);\n          setIsError(true);\n        }\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [query]);\n\n  const addMovie = useCallback((addedMovie: Movie) => {\n    if (!movies.some(movie => movie.imdbId === addedMovie.imdbId)) {\n      setMovies([\n        ...movies,\n        addedMovie,\n      ]);\n    }\n\n    setNewMovie(null);\n    setQuery('');\n  }, [movies]);\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={cn(\n                'input',\n                { 'is-danger': isError },\n              )}\n              value={query}\n              onChange={(event) => {\n                setQuery(event.target.value);\n                setIsError(false);\n              }}\n            />\n          </div>\n\n          {isError && (\n            <p\n              className={cn('help', 'is-danger')}\n              data-cy=\"errorMessage\"\n            >\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={cn(\n                'button',\n                'is-light',\n                {\n                  'is-loading': isLoading,\n                },\n              )}\n              disabled={query.length === 0}\n              onClick={handleOnClick}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          {newMovie && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={() => addMovie(newMovie)}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {newMovie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n\n          <MovieCard movie={newMovie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\n// import { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=c170ac60';\n\nexport function getMovie(query: string): Promise<MovieData> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}