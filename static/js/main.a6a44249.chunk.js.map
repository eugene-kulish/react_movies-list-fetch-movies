{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","api.ts","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","useState","query","setQuery","newMovie","setNewMovie","isLoading","setIsLoading","useEffect","fetch","then","res","json","catch","Response","Error","getMovie","movieFromServer","Title","Plot","Poster","imdbID","finally","htmlFor","type","id","placeholder","value","onChange","event","target","cn","disabled","length","onClick","App","setMovies","ReactDOM","render","document","getElementById"],"mappings":"oTAQaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACGA,GACC,sBAAKC,UAAU,OAAO,UAAQ,YAA9B,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACE,UAAQ,cACRC,IAAKF,EAAMG,OACXC,IAAI,kBAKV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAKV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAa,UAAQ,aAAlC,SAAgDD,EAAMK,aAI1D,sBAAKJ,UAAU,UAAU,UAAQ,mBAAjC,UACGD,EAAMM,YAEP,uBAEA,mBAAGC,KAAMP,EAAMQ,QAAS,UAAQ,WAAhC,4BCjCCC,EAA8B,SAAC,GAAD,IAAGC,EAAH,EAAGA,OAAH,OACzC,qBAAKT,UAAU,SAAf,SACGS,EAAOC,KAAI,SAAAX,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMY,c,sBCFZ,IAAMC,EAA6B,WAIxC,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,mBAAuB,MAAvD,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAkCJ,oBAAS,GAA3C,mBAAOK,EAAP,KAAkBC,EAAlB,KA0BA,OAxBAC,qBAAU,WACJF,GChBD,SAAkBJ,GACvB,OAAOO,MAAM,GAAD,OAHE,2CAGF,cAAiBP,IAC1BQ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBC,OAAM,iBAAO,CACZC,SAAU,QACVC,MAAO,uBDYPC,CAASd,GACNQ,MAAK,SAACO,GACDA,GACFZ,EAAY,CACVb,MAAOyB,EAAgBC,MACvBzB,YAAawB,EAAgBE,KAC7B7B,OAAQ2B,EAAgBG,OACxBzB,QAAQ,8BAAD,OAAgCsB,EAAgBI,QACvDtB,OAAQkB,EAAgBI,YAI7BC,SAAQ,WACPf,GAAa,QAGlB,CAACL,EAAOI,IAOT,qCACE,uBAAMlB,UAAU,aAAhB,UACE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQmC,QAAQ,cAAjC,yBAIA,qBAAKnC,UAAU,UAAf,SACE,uBACE,UAAQ,aACRoC,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZtC,UAAU,kBACVuC,MAAOzB,EACP0B,SAAU,SAACC,GAAD,OAAW1B,EAAS0B,EAAMC,OAAOH,YAI/C,mBAAGvC,UAAU,iBAAiB,UAAQ,eAAtC,qDAKF,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE,UAAQ,eACRoC,KAAK,SACLpC,UAAW2C,IAAG,SAAU,YACxBC,SAA2B,IAAjB9B,EAAM+B,OAChBC,QAAS,kBAAM3B,GAAa,IAL9B,4BAWF,qBAAKnB,UAAU,UAAf,SACE,wBACE,UAAQ,YACRoC,KAAK,SACLpC,UAAU,oBAHZ,qCAWN,sBAAKA,UAAU,YAAY,UAAQ,mBAAnC,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CAAWD,MAAOiB,WE1Fb+B,EAAM,WACjB,MAA4BlC,mBAAkB,IAA9C,mBAAOJ,EAAP,KAAeuC,EAAf,KAEA,OACE,sBAAKhD,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYS,OAAQA,MAGtB,qBAAKT,UAAU,UAAf,SACE,cAAC,EAAD,CAAWS,OAAQA,EAAQuC,UAAWA,UCZ9CC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a6a44249.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    (movie) && (\n      <div className=\"card\" data-cy=\"movieCard\">\n        <div className=\"card-image\">\n          <figure className=\"image is-4by3\">\n            <img\n              data-cy=\"moviePoster\"\n              src={movie.imgUrl}\n              alt=\"Film logo\"\n            />\n          </figure>\n        </div>\n\n        <div className=\"card-content\">\n          <div className=\"media\">\n            <div className=\"media-left\">\n              <figure className=\"image is-48x48\">\n                <img\n                  src=\"images/imdb-logo.jpeg\"\n                  alt=\"imdb\"\n                />\n              </figure>\n            </div>\n\n            <div className=\"media-content\">\n              <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n            </div>\n          </div>\n\n          <div className=\"content\" data-cy=\"movieDescription\">\n            {movie.description}\n\n            <br />\n\n            <a href={movie.imdbUrl} data-cy=\"movieURL\">\n              IMDB\n            </a>\n          </div>\n        </div>\n      </div>\n    )\n  );\n};\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport cn from 'classnames';\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  movies: Movie[];\n  setMovies: React.Dispatch<React.SetStateAction<Movie[]>>;\n};\n\nexport const FindMovie: React.FC<Props> = (\n  // movies,\n  // setMovies,\n) => {\n  const [query, setQuery] = useState('');\n  const [newMovie, setNewMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    if (isLoading) {\n      getMovie(query)\n        .then((movieFromServer) => {\n          if (movieFromServer) {\n            setNewMovie({\n              title: movieFromServer.Title,\n              description: movieFromServer.Plot,\n              imgUrl: movieFromServer.Poster,\n              imdbUrl: `https://www.imdb.com/title/${movieFromServer.imdbID}`,\n              imdbId: movieFromServer.imdbID,\n            });\n          }\n        })\n        .finally(() => {\n          setIsLoading(false);\n        });\n    }\n  }, [query, isLoading]);\n\n  // const addMovie = (newMovie: Movie) => {\n  //   setMovies([...movies, newMovie]);\n  // }\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-danger\"\n              value={query}\n              onChange={(event) => setQuery(event.target.value)}\n            />\n          </div>\n\n          <p className=\"help is-danger\" data-cy=\"errorMessage\">\n            Can&apos;t find a movie with such a title\n          </p>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"button\"\n              className={cn('button', 'is-light')}\n              disabled={query.length === 0}\n              onClick={() => setIsLoading(true)}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              data-cy=\"addButton\"\n              type=\"button\"\n              className=\"button is-primary\"\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\" data-cy=\"previewContainer\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard movie={newMovie} />\n      </div>\n    </>\n  );\n};\n","import { MovieData } from './types/MovieData';\n// import { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=c170ac60';\n\nexport function getMovie(query: string): Promise<MovieData> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie movies={movies} setMovies={setMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}